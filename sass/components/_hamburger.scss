.hamburger {
	display: inline-block;
	position: relative;
	cursor: pointer;
	transition-property: opacity, filter;
	transition-duration: 0.15s;
	transition-timing-function: linear;
	font: inherit;
	color: inherit;
	text-transform: none;
	background-color: transparent;
	border: 0;
	margin: 0;
	overflow: visible;

	// Disable burger on breakpoint
	@include md {
		display: none;
	}

	&:hover {
		opacity: 0.7;
	}

	&.is-active {
		&:hover {
			opacity: 0.7;
		}

		.hamburger-inner {
			background-color: #000000;

			&::before,
			&::after {
				background-color: #000000;
			}
		}
	}
}

.hamburger-box {
	width: 3rem;
	height: 24px;
	display: inline-block;
	position: relative;
}

.hamburger-inner {
	display: block;
	top: 50%;
	margin-top: -2px;
	width: 3rem;
	height: 0.3rem;
	background-color: #000000;
	// border-radius: 4px;
	position: absolute;
	transition-property: transform;
	transition-duration: 0.15s;
	transition-timing-function: ease;
	outline: none;

	&::before,
	&::after {
		width: 3rem;
		height: 0.3rem;
		background-color: #000000;
		// border-radius: 4px;
		position: absolute;
		transition-property: transform;
		transition-duration: 0.15s;
		transition-timing-function: ease;
	}

	&::before,
	&::after {
		content: "";
		display: block;
	}

	&::before {
		top: -10px;
	}

	&::after {
		bottom: -10px;
	}
}

/**** ============
EFFECTS
============ ****/
.hamburger--elastic-r .hamburger-inner {
	top: 2px;
	transition-duration: 0.275s;
	transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic-r .hamburger-inner::before {
	top: 10px;
	transition: opacity 0.125s 0.275s ease;
}

.hamburger--elastic-r .hamburger-inner::after {
	top: 20px;
	transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic-r.is-active .hamburger-inner {
	transform: translate3d(0, 10px, 0) rotate(-135deg);
	transition-delay: 0.075s;
}

.hamburger--elastic-r.is-active .hamburger-inner::before {
	transition-delay: 0s;
	opacity: 0;
}

.hamburger--elastic-r.is-active .hamburger-inner::after {
	transform: translate3d(0, -20px, 0) rotate(270deg);
	transition-delay: 0.075s;
}